apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    image: <%= node['kubernetes']['image'] %>:<%=node['kubernetes']['version'] %>
    command:
    - /hyperkube
    - apiserver
    - --bind-address=<%= node['kubernetes']['api']['bind_address'] %>
    - --advertise-address=$(ADVERTISE_ADDRESS)
    - --etcd-servers=<%= @etcd_servers %>
    - --etcd-certfile=<%= node['etcd']['cert_file'] %>
    - --etcd-keyfile=<%= node['etcd']['key_file'] %>
    - --etcd-cafile=<%= node['etcd']['trusted_ca_file'] %>
    - --storage-backend=<%= node['kubernetes']['api']['storage_backend'] %>
    - --allow-privileged=true
    - --apiserver-count=<%= @apiserver_count %>
    - --service-cluster-ip-range=<%= node['kubernetes']['api']['service_cluster_ip_range'] %>
    - --secure-port=<%= node['kubernetes']['api']['secure_port'] %>
    - --insecure-bind-address=<%= node['kubernetes']['api']['insecure_bind_address'] %>
    - --insecure-port=<%=node['kubernetes']['api']['insecure_port'] %>
    - --enable-admission-plugins=<%= node['kubernetes']['api']['enabled_admission_plugins'].join(',') %>
    - --disable-admission-plugins=<%= node['kubernetes']['api']['disabled_admission_plugins'].join(',') %>
    - --runtime-config=<%= node['kubernetes']['api']['runtime_config'].join(',') %>
    - --tls-cert-file=<%= node['kubernetes']['tls_cert_file'] %>
    - --tls-private-key-file=<%= node['kubernetes']['tls_private_key_file'] %>
    - --client-ca-file=<%= node['kubernetes']['client_ca_file'] %>
    - --service-account-key-file=<%= node['kubernetes']['service_account_key_file'] %>
    - --docker=<%= node['kubernetes']['docker']['endpoint'] %>
    - --cloud-config=<%= node['kubernetes']['cloud_config'] %>
    - --cloud-provider=<%= node['kubernetes']['cloud_provider'] %>
    - --log-dir=/var/log/kubernetes
    <% if node['kubernetes']['token_auth'] %>
    - --token-auth-file=<%= node['kubernetes']['token_auth_file'] %>
    <% end %>
    - --authorization-mode=<%= node['kubernetes']['authorization']['mode'] %>
    <% if node['kubernetes']['authorization']['mode'].include?('ABAC') %>
    - --authorization-policy-file=/etc/kubernetes/authorization-policy.jsonl
    <%- if node['kubernetes']['audit']['enabled'] %>
    - --audit-log-maxbackup=<%= node['kubernetes']['audit']['maxbackup'] %>
    - --audit-log-path=<%= node['kubernetes']['audit']['log_file'] %>
    <%- end %>
    <% end %>
    env:
      - name: ADVERTISE_ADDRESS
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
    ports:
    - containerPort: <%= node['kubernetes']['api']['secure_port'] %>
      hostPort: <%= node['kubernetes']['api']['secure_port'] %>
      name: https
    - containerPort: <%= node['kubernetes']['api']['insecure_port'] %>
      hostPort: <%= node['kubernetes']['api']['insecure_port'] %>
      name: local
    volumeMounts:
    - mountPath: /etc/kubernetes
      name: etc-kubernetes
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: ssl-certs-host
      readOnly: true
    - mountPath: /var/log/kubernetes
      name: logdir
      readOnly: false
  volumes:
  - hostPath:
      path: /usr/share/ca-certificates
    name: ssl-certs-host
  - hostPath:
      path: /etc/kubernetes/
    name: etc-kubernetes
  - hostPath:
      path: /var/log/kubernetes
    name: logdir
